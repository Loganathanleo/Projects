{"ast":null,"code":"var _jsxFileName = \"/home/divum/appraisal/src/components/Form/Project.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Form } from \"react-bootstrap\";\n\n// function Projects() {\n//   const [projectname, setProjectname] = useState(\"\");\n//   const [projectdescription, setProjectdescription] = useState(\"\");\n\n//   const link = `http://localhost:8081/getData/naveen@gmail.com`;\n//   const [data, setData] = useState([]);\n\n//   const fetchProject = async () => {\n//     try {\n//       const res = await fetch(link);\n//     const d = await res.json();\n//     console.log(d.Projects);\n//     return setData(d);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProject();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Form>\n//         <div>\n//           {data.map((dataObj, index) => {\n//             return (\n//               <div key={index}>\n//                 <div>\n//                   <label htmlFor=\"projectname\">Project Name</label>\n//                   {/* <textarea\n//                     id=\"projectname\"\n//                     rows={5}\n//                     cols={5}\n//                   />\n//                   {dataObj.project.projectName} */}\n//                 </div>\n//                 <div>\n//                   <label htmlFor=\"projectdescription\">\n//                     Project Description\n//                   </label>\n//                   {/* <textarea\n//                     id=\"projectdescription\"\n//                     rows={5}\n//                     cols={5}\n//                     onChange={(e) => setProjectdescription(e.target.value)}\n//                   /> */}\n//                 </div>\n//               </div>\n//             );\n//           })}\n//         </div>\n//       </Form>\n//     </div>\n//   );\n// }\n\n// export default Projects;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  const [data, setData] = useState([]);\n  const link = \"http://localhost:8081/getData/naveen@gmail.com\";\n  console.log(data, \"data\");\n  const fetchProject = async () => {\n    try {\n      const res = await fetch(link);\n      const d = await res.json();\n      console.log(d);\n      setData(prevState => {\n        debugger;\n        const updatedData = prevState ? [...prevState] : prevState;\n        updatedData.push(d[0]);\n        console.log(updatedData, \"Updated\");\n        return updatedData;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchProject();\n  }, []);\n\n  //const projects = [];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: data && (data === null || data === void 0 ? void 0 : data.projects.map((project, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `projectname_${index}`,\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: `projectname_${index}`,\n              type: \"text\",\n              value: project.projectName,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `projectdescription_${index}`,\n              children: \"Project Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: `projectdescription_${index}`,\n              type: \"text\",\n              value: project.projectDescription // Replace with the actual property name\n              ,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useEffect","useState","Form","jsxDEV","_jsxDEV","Projects","_s","data","setData","link","console","log","fetchProject","res","fetch","d","json","prevState","updatedData","push","error","children","projects","map","project","index","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","projectName","readOnly","projectDescription","_c","$RefreshReg$"],"sources":["/home/divum/appraisal/src/components/Form/Project.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { Form } from \"react-bootstrap\";\n\n// function Projects() {\n//   const [projectname, setProjectname] = useState(\"\");\n//   const [projectdescription, setProjectdescription] = useState(\"\");\n\n//   const link = `http://localhost:8081/getData/naveen@gmail.com`;\n//   const [data, setData] = useState([]);\n\n//   const fetchProject = async () => {\n//     try {\n//       const res = await fetch(link);\n//     const d = await res.json();\n//     console.log(d.Projects);\n//     return setData(d);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProject();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Form>\n//         <div>\n//           {data.map((dataObj, index) => {\n//             return (\n//               <div key={index}>\n//                 <div>\n//                   <label htmlFor=\"projectname\">Project Name</label>\n//                   {/* <textarea\n//                     id=\"projectname\"\n//                     rows={5}\n//                     cols={5}\n//                   />\n//                   {dataObj.project.projectName} */}\n//                 </div>\n//                 <div>\n//                   <label htmlFor=\"projectdescription\">\n//                     Project Description\n//                   </label>\n//                   {/* <textarea\n//                     id=\"projectdescription\"\n//                     rows={5}\n//                     cols={5}\n//                     onChange={(e) => setProjectdescription(e.target.value)}\n//                   /> */}\n//                 </div>\n//               </div>\n//             );\n//           })}\n//         </div>\n//       </Form>\n//     </div>\n//   );\n// }\n\n// export default Projects;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nfunction Projects() {\n  const [data, setData] = useState([]);\n\n  const link = \"http://localhost:8081/getData/naveen@gmail.com\";\n  console.log(data, \"data\");\n  const fetchProject = async () => {\n    try {\n      const res = await fetch(link);\n      const d = await res.json();\n      console.log(d);\n      setData((prevState) => {\n        debugger;\n        const updatedData = prevState ? [...prevState] : prevState;\n        updatedData.push(d[0]);\n        console.log(updatedData, \"Updated\");\n        return updatedData;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProject();\n  }, []);\n\n  //const projects = [];\n\n  return (\n    <div>\n      <Form>\n        {data &&\n          data?.projects.map((project, index) => {\n            return (\n              <div key={index}>\n                <div>\n                  <label htmlFor={`projectname_${index}`}>Project Name</label>\n                  <input\n                    id={`projectname_${index}`}\n                    type=\"text\"\n                    value={project.projectName}\n                    readOnly\n                  />\n                </div>\n                <div>\n                  <label htmlFor={`projectdescription_${index}`}>\n                    Project Description\n                  </label>\n                  <input\n                    id={`projectdescription_${index}`}\n                    type=\"text\"\n                    value={project.projectDescription} // Replace with the actual property name\n                    readOnly\n                  />\n                </div>\n              </div>\n            );\n          })}\n      </Form>\n    </div>\n  );\n}\n\nexport default Projects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}